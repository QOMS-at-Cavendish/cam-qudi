#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    nicard_6363:
        module.Class: 'national_instruments_x_series.NationalInstrumentsXSeries'
        photon_sources:
            - '/Dev1/PFI0'
        #    - '/Dev1/PFI9'
        clock_channel: '/Dev1/Ctr0' ##
        default_clock_frequency: 100 # optional, in Hz
        counter_channels:
            - '/Dev1/Ctr1' ##
        #counter_ai_channels:
        #    - '/Dev1/AI0'
        default_scanner_clock_frequency: 100 # optional, in Hz
        scanner_clock_channel: '/Dev1/Ctr2' ##
        #pixel_clock_channel: '/Dev1/PFI6'
        scanner_ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO1'
            - '/Dev1/AO2'
            - '/Dev1/AO3'
        #scanner_ai_channels:
        #    - '/Dev1/AI6'
        #    - '/Dev1/AI7'
        scanner_counter_channels:
            - '/Dev1/Ctr3' ##
        scanner_voltage_ranges:
            - [-1.6, 1.6]  #these change range scanned
            - [-1.6, 1.6]
            - [-1.6, 1.6]
            - [-1.6, 1.6]
        scanner_position_ranges:
            - [0e-6, 100e-6]
            - [0e-6, 100e-6]
            - [-50e-6, 50e-6]
            - [-10, 10]

        odmr_trigger_channel: '/Dev1/PFI0'

        gate_in_channel: '/Dev1/PFI0' ##
        default_samples_number: 50
        max_counts: 12e6
        read_write_timeout: 10
        counting_edge_rising: True
    
    attocube:
        module.Class: 'attocube_usb.AttoCubeStepper'
        port: 'COM3'
        axes: {'x':2,'y':3,'z':1}
        step_voltage_range: {'x':[0,60],'y':[0,60],'z':[0,60]}
        frequency_range: {'x':[0,1000],'y':[0,1000],'z':[0,1000]}

logic:
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'nicard_6363'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'nicard_6363'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fitlogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True

    stagecontrollogic:
        module.Class: 'stagecontrol_logic.StagecontrolLogic'
        connect:
            stagehardware: 'attocube'
            counterlogic: 'counterlogic'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
        default_meter_prefix: 'u'
    
    stagecontrolgui:
        module.Class: 'stagecontrol.stagecontrolgui.StagecontrolGui'
        connect:
            stagecontrollogic: 'stagecontrollogic'
            

